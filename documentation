First entry:
	I've been buisy with recreating my pseudocode but it didn't work out, the whole architecture is fucked.
	So I've been writing a simple game called Mau Mau, its a card game to get an Idea about how I should structure the game.
	It will have a game state pattern most likely. 

	I should learn to refractor my old code, but most of it is trash. IDK lets just jump right into it.

	As I've learned it should be done like this: Start with the Datastructures, so I will create a file for that.


Second entry:
	Okay, lets recall what happend last time.. I made the datastructures as planned, now it is time to do the algorythmitics.. That is the tricky part.
	I need to do some pseudocode..
	Well, in the game of Mensch Ã„rgere Dich Nicht, you have to move figures and you have a 6 sided die. The die gets rolled at least once every turn. 
	But sometimes the die gets rolled up to 3 times.
	In the beginning of the game, when the player has no figure in field or when every figure is placed inside their homes it is time to get at least 
	one figure in the game, or in the field.
	When the player has at least one figure in the field it is up to the player what he does. But when the figure become active and is in the field it has to move 
	at least once, so that the entry point of the players base is not blocked.
	When the entry point of the players base is not blocked it is up to the player what to do.
	He must select the figure he wants to move.
	When the figure which has been moved encounters another figure it is going to kick the other figure out of the field and that figure becomes
	an inactive figure which means it gets back to the house of that player.
	As soon as the player has moved his figure through the whole field and it enters the home it is locked in there and can not longer be threatened by any other figure.
	But the figure has to exactly be at the right spot.
	When all the figures are in the home area, perfectly placed, that player wins the game.
	As soon as every player, except the last one has all their figures in their home field the game is over.

Third entry:
	Okay, so, I am not good at this, but who is good at this, when it comes about refactoring code..
	There are some major design flaws in my code whish make it most unreadable. It is not clean code anymore.
	It seems to be functional but it is very confusing and the head problem seems to be my coding style.
	Most likely my coding style regarding OOP in python which I have to admit, on which I am not that great.
	So first things first, I need to learn some more OOP techniques regarding python, so that is my mission for the next step.
	I can hardly recall what I did last time so maybe this entry is more or less useless but it could be still interessting to
	understand my journey on this way of programming.
		When I am done with learning more about OOP in python I will try to refactor my code and make it easier to understand.
	I hope that this will be helpful in the future.. Of this repository.

